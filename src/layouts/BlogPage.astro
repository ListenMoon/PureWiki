---
import { single, published, getPost } from '@blog/utils';
import type { Post, PostProps } from '#/post';
import { getEditURL, enableRemote, isProd } from "@blog/config"
import Base from "./_ui/Base.astro"
import HeadTree from "@blog/components/HeadTree.astro"

export interface extendProps {
	filePath: string
	hideSide: boolean
    hideMenu: boolean
    showTree?: boolean
    comment: boolean
}
export type Props = Partial<PostProps> & extendProps
let { title, description, filePath, _head, heroImage, hideSide = false, hideMenu = false, mode, comment, showTree } = getPost(Astro.props as Props) as Props

    // {
    //     isProd && comment && (
    //         <script src="https://giscus.app/client.js"
    //             data-repo="ListenMoon/PureWiki"
    //             data-repo-id="R_kgDOIzwtbQ"
    //             data-category="Q&A"
    //             data-category-id="DIC_kwDOIzwtbc4CT-Ab"
    //             data-mapping="pathname"
    //             data-strict="0"
    //             data-reactions-enabled="1"
    //             data-emit-metadata="0"
    //             data-input-position="top"
    //             data-theme="light_tritanopia"
    //             data-lang="zh-CN"
    //             crossorigin="anonymous"
    //             async>
    //         </script>
    //         <div class="giscus" style="padding: 25px;box-sizing: border-box;"></div>
    //         <div class="giscus-frame" style="padding: 25px;box-sizing: border-box;"></div>
    //     )
    // }

    // {
    //     isProd && comment && (
    //         <style is:global>
    //             .utterances{
    //                 max-width: 100% !important;
                    
    //             }    
    //             .utterances iframe{
    //                 padding: 0 25px;
    //                 box-sizing: border-box;
    //             }
    //         </style>
    //         <script is:raw src="https://utteranc.es/client.js"
    //             repo="ListenMoon/PureWiki"
    //                 issue-term="pathname"
    //                 label="收录"
    //                 theme="github-light"
    //                 crossorigin="anonymous"
    //                 async>
    //         </script>
    //     )
    // }
---
<Base title={title} description={description} hideSide={hideSide} hideMenu={hideMenu} showTree={showTree}>
	{heroImage && (heroImage.includes(".mp4") ? <video class="hero-image" src={heroImage} autoplay muted loop /> : <img class="hero-image" src={heroImage} alt="" />)}
	<article class:list={["typo article",mode]}>
	{enableRemote && filePath && <a href={getEditURL(filePath)} target="_blank" style="margin: 6px 0;display: inline-block;">在源文件编辑</a>}
	{enableRemote && filePath && <hr>}
        <div class="article__content">
            <slot />
        </div>
	</article>
    {
        isProd && comment && (
            <div id="gitalk-container"></div>
            <style is:global>
                #gitalk-container{
                    max-width: 100% !important;
                    
                }    
                #gitalk-container{
                    padding: 0 25px;
                    padding-bottom: 25px;
                    box-sizing: border-box;
                }
            </style>
            <script is:raw>
             setTimeout(() => {
                const gitalk = new Gitalk({
                clientID: '8718e90a59995ab7b301',
                clientSecret: '7bd4b73f54fc47dc2d6a2221f3781211afd1eed2',
                repo: 'PureWiki',      // The repository of store comments,
                owner: 'ListenMoon',
                admin: ['npmrun'],
                id: location.pathname,      // Ensure uniqueness and length less than 50
                distractionFreeMode: false  // Facebook-like distraction free mode
            })
            gitalk.render('gitalk-container')
             }, 0);
            </script>
        )
    }
	<HeadTree slot="side" head={_head}></HeadTree>
</Base>
