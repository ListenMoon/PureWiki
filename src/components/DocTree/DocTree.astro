---
import DocTreeSelf from "./DocTreeSelf.astro";
import { getNewURL, enableRemote, SITE_TYPE, ESITETYPE } from "@blog/config";
export type One = {
  name: string;
  path: string;
  active: string;
  cateActive?: string;
  filePath: string;
  data?: any;
  children: One[];
};

export interface Props {
  list: One[];
  title: string;
  isBlog?: boolean;
}

const { isBlog = false } = Astro.props as Props;

function isActive() {
  let pathArr = decodeURIComponent(Astro.url.pathname)
    .slice(1)
    .replace(/\/$/, "")
    .split("/");
  if (
    (pathArr.length === 2 && pathArr[0] === "post") ||
    (pathArr.length === 1 && pathArr[0] === "cate")
  ) {
    return true;
  }
  return false;
}
---

<div class="tree" id="tree">
  {
    !isBlog ? (
      <details open="true" style="direction: ltr;" class="my-[10px]">
        <summary>
          <span class="tree-item">{Astro.props.title}</span>
          {enableRemote && (
            <a href={getNewURL("/article")} target="_blank" class="op">
              新建
            </a>
          )}
        </summary>
        <DocTreeSelf {...Astro.props} />
      </details>
    ) : (
      <div style="direction: ltr;padding-left: 17px;">
        <div style="padding:10px 0;padding-left:17px; margin-left: -17px;position:sticky;top: 0;background: #f8f8f8;">
          <a
            href="/cateAll"
            style={`display: flex;color:inherit;border:0;text-decoration: none;`}
          >
            <span title="所有文章" class:list={["tree-item"]}>
              所有文章
            </span>
          </a>
        </div>
        <div>
          <a
            href="/cate"
            style={`display: flex;color:inherit;border:0;text-decoration: none;margin: 5px 0;`}
          >
            <span
              title="顶层"
              class:list={["tree-item", isActive() ? "active" : ""]}
            >
            顶层
            </span>
            {enableRemote && (
                <div data-href={getNewURL("/article")} class="op">
                新建
                </div>
            )}
          </a>
        </div>
        <DocTreeSelf {...Astro.props} depth={0} />
      </div>
    )
  }
</div>
<!-- <script is:raw>
    function heightToTop(ele){
        if(!ele) return 0
        //ele为指定跳转到该位置的DOM节点
        let root = document.body;
        let height = 0;
        do{
            height += ele.offsetTop;
            ele = ele.offsetParent;
        }while( ele !== root )
        const top = document.querySelector(".tree-wrapper .tree").offsetTop
        const clientHeight = document.querySelector(".tree-wrapper .tree").parentNode.clientHeight
        return height - top - clientHeight/2 + 20;
    }
    
    setTimeout(()=>{
      document.querySelector(".tree-wrapper .tree").scrollTo({
          top:  heightToTop(document.querySelector(".tree-wrapper .tree .tree-item.active")),
          behavior:'smooth'
      })
    }, 20)
</script> -->